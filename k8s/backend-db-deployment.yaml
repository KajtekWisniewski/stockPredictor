apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: backend-db
  name: backend-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: backend-db
    spec:
      containers:
        - args:
            - -p
            - '5433'
          env:
            - name: POSTGRES_DB
              value: api
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              value: api
          image: postgres
          name: backend-db
          ports:
            - containerPort: 5433
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: backend-db-data
          resources:
            requests:
              memory: '64Mi'
              cpu: '250m'
            limits:
              memory: '256Mi'
              cpu: '500m'
      restartPolicy: Always
      volumes:
        - name: backend-db-data
          persistentVolumeClaim:
            claimName: backend-db-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: backend-db-data
  name: backend-db-data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
